import { CompiledExpression } from '../expressions';
import VM from '../../vm/append';
import { PathReference, CachedReference, RevisionTag } from '@glimmer/reference';
import { Option, Opaque } from '@glimmer/util';
export default class CompiledConcat {
    private parts;
    type: string;
    constructor(parts: CompiledExpression<Opaque>[]);
    evaluate(vm: VM): CachedReference<Option<string>>;
    toJSON(): string;
}
export declare class ConcatReference extends CachedReference<Option<string>> {
    private parts;
    tag: RevisionTag;
    constructor(parts: PathReference<Opaque>[]);
    protected compute(): Option<string>;
}
